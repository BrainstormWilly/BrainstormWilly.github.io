---
title:  "Bloc Jams"
date:   2017-03-23 08:00:00
categories: [Portfolio]
excerpt: <img src="images/spotify.jpeg" class="portfolio-thumbnail-image" align="left">As part of the Bloc.io AngularJS curriculum I had to build a javascript music player. For extra credit I decided to try and explore integrating Spotify’s API.
tags: []
---

![Bloc Jams](/images/bloc_jams.png){:class="portfolio-hero-image"}

As part of the Bloc.io AngularJS curriculum I had to build a javascript music player. For extra credit I decided to try and explore integrating Spotify's API.

## Wouldn’t it be cool...
After completing this project ahead of schedule, I thought I would try and experiment with integrating my Spotify account to see if I could make a customer music player. After all, building a streaming music player was nothing new to me. For 3 years I worked as a contract Flash developer for MOG inc. (now Beats/Apple) to help build their first streaming music player. Wouldn’t it be cool if I could use that experience to build my own Spotify experience?

> After years of developing Flash media streaming apps, I was excited to develop a skin for Spotify...but I was disappointed

## Hopes Dashed
As it turns out, Spotify’s API is very restrictive. You can build interfaces for meta-data like playlists and albums, but you can’t change the actual javascript player. This restricted my design aspirations. However, I did build a functional demo that impressed my mentor ;-)

## Software
* AngularJS
* Spotify API

## Developer Notes
* [Github](https://github.com/BrainstormWilly/bloc-jams-angular)
* [Player](https://enigmatic-caverns-73577.herokuapp.com/)

As this was a student project, I only finished what was necessary to complete the assignment. Had I been more impressed with Spotify’s, I might have continued to build my “ultimate music player.”
